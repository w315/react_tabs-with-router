{"version":3,"sources":["App.tsx","components/Context.tsx","components/Home/Home.tsx","components/Tabs/Tabs.tsx","components/InvalidAddress/InvalidAddress.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","to","TabsContext","React","createContext","undefined","Error","TabsProvider","children","values","tabs","id","title","content","Provider","value","Home","Tabs","context","useContext","useTabsContext","useParams","selectedTab","find","tab","map","tabId","InvalidAddress","ReactDOM","render","path","element","index","document","getElementById"],"mappings":"kPAOMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAAW,cAAe,CACtF,YAAaD,GADM,EAIRE,EAAM,kBACjB,qCAEE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWJ,EAFb,kBAMA,cAAC,IAAD,CACEK,GAAG,QACHD,UAAWJ,EAFb,yBAUN,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UA3BW,E,OCJbE,E,OAAcC,EAAMC,mBAAuCC,GAEjE,IAAKH,EACH,MAAM,IAAII,MAAM,8CAIX,IAAMC,EAAkD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAO1DC,EAAsB,CAC1BC,KAPkB,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,iBAO1C,OACE,cAACX,EAAYY,SAAb,CAAsBC,MAAON,EAA7B,SACGD,GAGN,EC9BYQ,EAAiB,WAC5B,OACE,oBAAIhB,UAAU,QAAd,sBAEH,ECAYiB,EAAiB,WAC5B,IACEP,EF0B0B,WAC5B,IAAMQ,EAAUC,qBAAWjB,GAE3B,IAAKgB,EACH,MAAM,IAAIZ,MAAM,8CAGlB,OAAOY,CACR,CEjCKE,GADFV,KAGMC,EAAOU,cAAPV,GACFW,EAAcZ,EAAKa,MAAK,SAAAC,GAAG,OAAIA,EAAIb,KAAOA,CAAf,IAMjC,OACE,qCACE,oBAAIX,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGU,EAAKe,KAAI,SAAAD,GACR,OACE,oBAEE,UAAQ,MACRxB,WAfQ0B,EAegBF,EAAIb,GAfFb,IAAW,CACjD,YAAa4B,IAAUf,KAWb,SAKE,cAAC,IAAD,CACEV,GAAE,UAAKuB,EAAIb,IADb,SAGGa,EAAIZ,SAPFY,EAAIb,IAbF,IAACe,CAwBb,QAIL,qBAAK1B,UAAU,QAAQ,UAAQ,aAA/B,SACGsB,EAAcA,EAAYT,QAAU,0BAI5C,EC7CYc,EAA2B,WACtC,OACE,oBAAI3B,UAAU,QAAd,2BAEH,ECWD4B,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UAEE,cAAC,IAAD,CACEC,OAAK,EACLD,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU9B,GAAG,QAE1C,cAAC,IAAD,CAAO6B,KAAK,OAAOC,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,cAAC,EAAD,QAG7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAKjCE,SAASC,eAAe,Q","file":"static/js/main.11b54b0d.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\n// eslint-disable-next-line max-len\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n  'is-active': isActive,\n});\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={getLinkClass}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","import React, { ReactNode, useContext } from 'react';\nimport { Tab } from '../types/Tab';\n\ninterface ValuesTypes {\n  tabs: Tab[];\n}\n\nconst TabsContext = React.createContext<ValuesTypes | undefined>(undefined);\n\nif (!TabsContext) {\n  throw new Error('useUser must be used within a UserProvider');\n}\n\n// eslint-disable-next-line max-len\nexport const TabsProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const tabs: Tab[] = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  const values: ValuesTypes = {\n    tabs,\n  };\n\n  return (\n    <TabsContext.Provider value={values}>\n      {children}\n    </TabsContext.Provider>\n  );\n};\n\nexport const useTabsContext = (): ValuesTypes => {\n  const context = useContext(TabsContext);\n\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n\n  return context;\n};\n","export const Home: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import { NavLink, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useTabsContext } from '../Context';\n\nexport const Tabs: React.FC = () => {\n  const {\n    tabs,\n  } = useTabsContext();\n\n  const { id } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === id);\n\n  const getLinkClass = (tabId: string) => classNames({\n    'is-active': tabId === id,\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={getLinkClass(tab.id)}\n              >\n                <NavLink\n                  to={`${tab.id}`}\n                >\n                  {tab.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? selectedTab.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","export const InvalidAddress: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport {\n  App,\n} from './App';\nimport { TabsProvider } from './components/Context';\nimport { Home } from './components/Home';\nimport { Tabs } from './components/Tabs';\nimport { InvalidAddress } from './components/InvalidAddress';\n\nReactDOM.render(\n  <Router>\n    <TabsProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n\n          <Route\n            index\n            element={<Home />}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"tabs\" element={<Tabs />}>\n            <Route path=\":id\" element={<Tabs />} />\n          </Route>\n\n          <Route path=\"*\" element={<InvalidAddress />} />\n        </Route>\n      </Routes>\n    </TabsProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}